//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace templateApp.SUsuario {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SUsuario.ISUsuario")]
    public interface ISUsuario {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUsuario/ObtenerExistenciaUsuario", ReplyAction="http://tempuri.org/ISUsuario/ObtenerExistenciaUsuarioResponse")]
        bool ObtenerExistenciaUsuario(string correo, string contrasena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUsuario/ObtenerExistenciaUsuario", ReplyAction="http://tempuri.org/ISUsuario/ObtenerExistenciaUsuarioResponse")]
        System.Threading.Tasks.Task<bool> ObtenerExistenciaUsuarioAsync(string correo, string contrasena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUsuario/ObtenerUsuariosIntranet", ReplyAction="http://tempuri.org/ISUsuario/ObtenerUsuariosIntranetResponse")]
        IAP.BE.Usuario[] ObtenerUsuariosIntranet(int id, string nombres, int eslista, string dbEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUsuario/ObtenerUsuariosIntranet", ReplyAction="http://tempuri.org/ISUsuario/ObtenerUsuariosIntranetResponse")]
        System.Threading.Tasks.Task<IAP.BE.Usuario[]> ObtenerUsuariosIntranetAsync(int id, string nombres, int eslista, string dbEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUsuario/RegistrarUsuarioIntranet", ReplyAction="http://tempuri.org/ISUsuario/RegistrarUsuarioIntranetResponse")]
        bool RegistrarUsuarioIntranet(IAP.BE.Usuario eu, string dbEmpresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISUsuario/RegistrarUsuarioIntranet", ReplyAction="http://tempuri.org/ISUsuario/RegistrarUsuarioIntranetResponse")]
        System.Threading.Tasks.Task<bool> RegistrarUsuarioIntranetAsync(IAP.BE.Usuario eu, string dbEmpresa);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISUsuarioChannel : templateApp.SUsuario.ISUsuario, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SUsuarioClient : System.ServiceModel.ClientBase<templateApp.SUsuario.ISUsuario>, templateApp.SUsuario.ISUsuario {
        
        public SUsuarioClient() {
        }
        
        public SUsuarioClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SUsuarioClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SUsuarioClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SUsuarioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool ObtenerExistenciaUsuario(string correo, string contrasena) {
            return base.Channel.ObtenerExistenciaUsuario(correo, contrasena);
        }
        
        public System.Threading.Tasks.Task<bool> ObtenerExistenciaUsuarioAsync(string correo, string contrasena) {
            return base.Channel.ObtenerExistenciaUsuarioAsync(correo, contrasena);
        }
        
        public IAP.BE.Usuario[] ObtenerUsuariosIntranet(int id, string nombres, int eslista, string dbEmpresa) {
            return base.Channel.ObtenerUsuariosIntranet(id, nombres, eslista, dbEmpresa);
        }
        
        public System.Threading.Tasks.Task<IAP.BE.Usuario[]> ObtenerUsuariosIntranetAsync(int id, string nombres, int eslista, string dbEmpresa) {
            return base.Channel.ObtenerUsuariosIntranetAsync(id, nombres, eslista, dbEmpresa);
        }
        
        public bool RegistrarUsuarioIntranet(IAP.BE.Usuario eu, string dbEmpresa) {
            return base.Channel.RegistrarUsuarioIntranet(eu, dbEmpresa);
        }
        
        public System.Threading.Tasks.Task<bool> RegistrarUsuarioIntranetAsync(IAP.BE.Usuario eu, string dbEmpresa) {
            return base.Channel.RegistrarUsuarioIntranetAsync(eu, dbEmpresa);
        }
    }
}
